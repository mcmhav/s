#!/usr/bin/env bash

HISTSIZE=10000
HISTFILESIZE=2000
export HISTFILE=~/.bash_eternal_ish_history
HISTCONTROL=ignoreboth

unset PROMPT_COMMAND

function timer_start {
  timer=${timer:-$SECONDS}
}

function timer_stop {
  timer_show=$((SECONDS - timer))

  if [ "$timer_show" -gt "900" ]; then
    notifyer "Done!!!"
    tput bel
  fi

  # arr=( "sau" )
  # rand=$[ $RANDOM % ${#arr[@]} ]
  # timer_show=${arr[$rand]}

  unset timer
}
trap 'timer_start' DEBUG

function error_log {
  prompt_command__isnewline__last="$prompt_command__isnewline__curr"
  prompt_command__isnewline__curr="$(history 1 | grep -Eo '^\ [0-9]+')"

  promt_message=""
  if [[
    # http://www.tldp.org/LDP/abs/html/exitcodes.html
    $1 != 0 && # no error
    $1 != 130 && # Ctrl + C - exit
    "$prompt_command__isnewline__curr" != "$prompt_command__isnewline__last"
  ]]; then
    promt_message="$(printf \\xf0\\x9f\\x92\\xa9) ~$1|"
  else
    printf ""
  fi
}

function promt_commands {
  local curr_exit="$?"

  timer_stop
  error_log $curr_exit
}

PROMPT_COMMAND=promt_commands

if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]; then
  IS_SSH_SESSION="yeyaa"
# else
#   case $(ps -o comm= -p $PPID) in
#     sshd|*/sshd) SESSION_TYPE=remote/ssh;;
#   esac
fi

PS1='${promt_message}\[\e[1;35m\]${timer_show}\[\e[m\]|\[\e['
if [ ! -z $IS_SSH_SESSION ]; then
  PS1=$PS1'1;36m'
else
  PS1=$PS1'1;32m'
fi
PS1=$PS1'\]\W\[\e[m\]\[\e[0;31m\]$\[\e[m\] '

export PS1=$PS1
# export PS1='$(error_log)$ '
# export PS1='[\[\e[1;35m\]${timer_show}\[\e[m\]][\[\e[1;32m\]\W\[\e[m\]]\[\e[0;31m\]$\[\e[m\] '
export PS2='> '

# '\e[x;ym $PS1 \e[m' Where:

# \e[ : Start color scheme.
# x;y : Color pair to use (x;y)
# $PS1 : Your shell prompt variable.
# \e[m : Stop color scheme.
