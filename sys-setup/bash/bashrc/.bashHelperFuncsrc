#!/usr/bin/env bash

# TODO: should probably move some of these to separate .sh-files?!?!?

pieConnect(){
  piIp='cakePi'
  if [ ! -z "$1" ]; then
    piIp="$1"
  fi
  ssh root@"$piIp"
}

lineCount() {
  find . -name "*.$1" | xargs wc -l
}

calcWork(){
  cwd=$(PWD)
  cd "$bashCWD/../bash/timeLogging" || exit
  ./findStartEnd.sh
  cd "$cwd" || exit
}

updateBashRC(){
  source ~/.bashrc;
}

setScreens() {
  xrandr --output VGA-0 --left-of VGA-1
}

updateTrakt() {
  if [ "$(uname -s)" == "Linux" ]; then
    echo "todo"
  elif [ "$(uname -s)" == "Darwin" ]; then
    cd ~/Library/Application\ Support/Plex\ Media\ Server/Plug-ins/Plex-Trakt-Scrobbler/ || exit;
    git pull;
  elif [ "$(uname -s)" == "MINGW64_NT-10.0" ]; then
    echo "todo"
  fi
}

c() {
  if [ "$(uname -s)" == "Linux" ]; then
    echo "todo"
  elif [ "$(uname -s)" == "Darwin" ]; then
    "$1" | pbcopy
  elif [ "$(uname -s)" == "MINGW64_NT-10.0" ]; then
    echo "todo"
  fi
}

tcpp() {
  netstat -vanp tcp | grep $1
}

http() {
  PYTHON_MAJOR_VERSION=$(python -c 'import sys; print(sys.version_info[:])'[0])

  if [ "$PYTHON_MAJOR_VERSION" -gt 2 ]; then
    python -m http.server $1
  else
    python -m SimpleHTTPServer $1
  fi
}

cpIterm2Plist() {
  cp ~/Library/Preferences/com.googlecode.iterm2.plist ~/r/s/sys-setup/os/mac/configs/
}

lc() {
  colorls "$@" 2> /dev/null
}

nukeDockers() {
  docker rm $(docker ps -a -q)
  docker rmi $(docker images -q)
  docker volume rm $(docker volume ls -qf dangling=true)
}

notifyer() {
  if [ "$(uname -s)" == "Linux" ]; then
      notify-send -u critical "$@"
  elif [ "$(uname -s)" == "Darwin" ]; then
      # lol=$(curl -s "http://labs.bible.org/api/?passage=random")
      osascript -e "display notification \"$*\" with title \"God:\""
  else
      echo "todoooo"
  fi
}

alarmIn() {
  SLEEP_TIME="$1"
  ALARM_MESSAGE="Done!!1"
  if [ ! -z "$2" ]; then
    ALARM_MESSAGE="$2"
  fi

  alarmInInternal() {
    sleep $SLEEP_TIME;

    notifyer $ALARM_MESSAGE
  }

  while [ "$1" != "" ]; do
    case $1 in
      -s | --seconds )
        shift
        if test $# -gt 0; then
          SLEEP_TIME=$1
        else
          echo "no seconds arg specified"
          exit 1
        fi
        ;;
      -m | --minutes )
        shift
        if test $# -gt 0; then
          SLEEP_TIME=$(($1 * 60))
        else
          echo "no minutes arg specified"
          exit 1
        fi
        ;;
      -h | --hours )
        shift
        if test $# -gt 0; then
          SLEEP_TIME=$(($1 * 60 * 60))
        else
          echo "no hours arg specified"
          exit 1
        fi
        ;;
      -msg | --message )
        shift
        if test $# -gt 0; then
          ALARM_MESSAGE="$1"
        else
          echo "no minutes arg specified"
          exit 1
        fi
        ;;
      * )
        echo "Time plz"
    esac
    shift
  done

  alarmInInternal &
}
