#!/usr/bin/env bash

INCOMMING_PARAMS_PRE_FORMAT=""
# Split incomming parameters to:
#  - Wanted parameters
#  - Parameters sent into script
while getopts "h-:" optchar; do
  case "${optchar}" in
  -)
    case "${OPTARG}" in
    incomming_params)
      shift $((OPTIND - 1))
      INCOMMING_PARAMS_PRE_FORMAT="$@"
      break
      ;;
    params)
      PARAMS="${!OPTIND}"
      PARAMS=$(echo "$PARAMS" | tr '[:lower:]' '[:upper:]')
      IFS=' ' read -r -a PARAMS <<<"$PARAMS"
      OPTIND=$((OPTIND + 1))
      ;;
    *)
      OPTIND=$((OPTIND + 1))
      ;;
    esac
    ;;
  *) shift ;;
  esac
done

IFS=' ' read -r -a INCOMMING_PARAMS <<<"$@"

# Export incomming parameters into variables based on name and wanted parameters
INCOMMING_PARAM="${INCOMMING_PARAMS[0]}"

for param in "${PARAMS[@]}"; do
  INCOMMING_PARAMS_COUNT=0
  INCOMMING_PARAM="${INCOMMING_PARAMS[$INCOMMING_PARAMS_COUNT]}"
  while [ "$INCOMMING_PARAM" != "" ]; do
    tmp_incomming_param=$(printf "%s" "$INCOMMING_PARAM" | tr '[:lower:]' '[:upper:]')
    case "$tmp_incomming_param" in
    -$param | --$param)
      if
        [[ ${INCOMMING_PARAMS[$((INCOMMING_PARAMS_COUNT + 1))]} != -* ]] &&
          [[ ${INCOMMING_PARAMS[$((INCOMMING_PARAMS_COUNT + 1))]} != "" ]]
      then
        tmp_name="PARAM_$param"
        printf -v $tmp_name "${INCOMMING_PARAMS[$((INCOMMING_PARAMS_COUNT + 1))]}"
        export $tmp_name
        INCOMMING_PARAMS_COUNT=$((INCOMMING_PARAMS_COUNT + 1))
      else
        tmp_name="PARAM_$param"
        printf -v $tmp_name 1
        export $tmp_name
      fi
      ;;
    --) export PARAM_REST="${INCOMMING_PARAMS[@]:$((INCOMMING_PARAMS_COUNT + 1))}" ;;
    *) ;;
    esac
    INCOMMING_PARAMS_COUNT=$((INCOMMING_PARAMS_COUNT + 1))
    INCOMMING_PARAM=${INCOMMING_PARAMS[$INCOMMING_PARAMS_COUNT]}
  done
done
