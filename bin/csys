#!/usr/bin/env bash

_FILE_NAME="$0"

_help() {
    COMMAND_OPTIONS=$(printf "
  install \t install a package
  reqs-install \t install requirements
  update \t update system
  push \t push system config to remote
  status \t status of the system config
  is-package-installed \t check if package is installed
  -h, --help \t show this help text
" | column -ts $'\t')

    HELP_TEXT="usage: $(basename "$_FILE_NAME") [-h] --

where:
$COMMAND_OPTIONS"

    echo "$HELP_TEXT"
}

_push() {
    loggit "adding to git"
    git add --all

    loggit "commiting to git"
    git commit -am "AUTO: update system configs" --quiet

    loggit "pushing to git"
    git push --quiet
}
_pull() {
    loggit "Pulling"
    git pull
}

csysStatus() {
    git status --short --branch
}

csysDiff() {
    git diff
}

# bash_completion
# https://iridakos.com/tutorials/2018/03/01/bash-programmable-completion-tutorial.html
_csys() {
    echo ""
}

CONFIG_HOME="$CSYS_HOME"
SCRIPT_DIR=$(dirname "${BASH_SOURCE[0]}")
RETURN_TO=$(pwd)

cd "$CONFIG_HOME" || exit

# _csys "$@"

case $1 in
install)
    shift
    "$SCRIPT_DIR/_csys/_csys_install" "$@"
    ;;
reqs-install)
    shift
    "$SCRIPT_DIR/_csys/_csys_reqs_install" "$@"
    ;;
update)
    shift
    "$SCRIPT_DIR/_csys/_csys_update" "$@"
    ;;
status)
    csysStatus
    ;;
push)
    _push
    ;;
pull)
    _pull
    ;;
config-update)
    source "$CSYS_BASH_HOME/main.bashrc"
    ;;
is-package-installed)
    shift
    "$SCRIPT_DIR/_csys/_csys_is_package_installed" "$@"
    exit $?
    ;;
--diff)
    csysDiff
    ;;
-h | --help)
    _help
    ;;
*)
    loggit "no work"
    ;;
esac

cd "$RETURN_TO" || exit
